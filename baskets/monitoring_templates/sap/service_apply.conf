#
# Service-Apply Rules for SAP-Instances
# (13.11.2019, A. Foerster)
#
# filesystem of SAP-instance
#
apply Service "SAP Instance Filesystem " for (config in host.vars.sap_instance_index) {
    import "generic_by_ssh"

    # assign only if host.vars.sap_instance_index is defined:
    assign where host.vars.sap_instance_index
    # set service name displayed to something readable 
    display_name = "SAP Instance Filesystem " + host.vars.sap_instance_sid[config] + "_" + host.vars.sap_instance_type[config] + host.vars.sap_instance_number[config]
    # set by_ssh_command for check of Instance filesystem
    vars.by_ssh_command = "/opt/freeware/lib/nagios/plugins/check_disk -w 10% -c 5% -p /usr/sap/" + host.vars.sap_instance_sid[config] + "/" + host.vars.sap_instance_type[config] + host.vars.sap_instance_number[config]
    #
    # use escal groups of corresponding host
    # vars.escal_groups = host.vars.escal_groups
}
#
# SAP Kernel Version of SAP-instance
#
apply Service "SAP Kernel Version " for (config in host.vars.sap_instance_index) {
    import "generic_sapcontrol"

    # assign only if host.vars.sap_instance_index is defined:
    assign where host.vars.sap_instance_index
    # set service name displayed to something readable 
    display_name = "SAP Kernel Version " + host.vars.sap_instance_sid[config] + "_" + host.vars.sap_instance_type[config] + host.vars.sap_instance_number[config]
    # set by_ssh_command for check of Instance filesystem
    vars.sap_instance_no = host.vars.sap_instance_number[config]
    check_command = "check_sap_kernel_version" 
    #
    # use escal groups of corresponding host
    # vars.escal_groups = host.vars.escal_groups
}
#
# SAP Enqueue Table
#
apply Service "SAP Enqueue Table " for (config in host.vars.sap_instance_index) {
    import "generic_sapcontrol"

    # assign only if instance-type is SCS or ASCS
    assign where match("*SCS", host.vars.sap_instance_type[config])
    # set service name displayed to something readable 
    display_name = "SAP Enqueue Table " + host.vars.sap_instance_sid[config] + "_" + host.vars.sap_instance_type[config] + host.vars.sap_instance_number[config]
    # set by_ssh_command for check of Instance filesystem
    vars.sap_instance_no = host.vars.sap_instance_number[config]
    vars.sap_instance_sid_service = host.vars.sap_instance_sid[config]
    check_command = "check_sap_enqueue_table" 
    #
    # use escal groups of corresponding host
    # vars.escal_groups = host.vars.escal_groups
}
#
# SAP Instance Status
#
apply Service "SAP Instance Status " for (config in host.vars.sap_instance_index) {
    import "generic_sapcontrol"

    # assign only if host.vars.sap_instance_index is defined:
    assign where host.vars.sap_instance_index
    # set service name displayed to something readable 
    display_name = "SAP Instance Status " + host.vars.sap_instance_sid[config] + "_" + host.vars.sap_instance_type[config] + host.vars.sap_instance_number[config]
    # set by_ssh_command for check of Instance filesystem
    vars.sap_instance_no = host.vars.sap_instance_number[config]
    check_command = "check_sap_instance_status"
    #
    # use escal groups of corresponding host
    # vars.escal_groups = host.vars.escal_groups
}
#
# SAP Dispatcher Queue
#
apply Service "SAP Dispatcher Queue " for (config in host.vars.sap_instance_index) {
    import "generic_sapcontrol"

    # assign only if instance-type is SCS or ASCS
    assign where match("D*", host.vars.sap_instance_type[config])
    # set service name displayed to something readable 
    display_name = "SAP Dispatcher Queue " + host.vars.sap_instance_sid[config] + "_" + host.vars.sap_instance_type[config] + host.vars.sap_instance_number[config]
    # set by_ssh_command for check of Instance filesystem
    vars.sap_instance_no = host.vars.sap_instance_number[config]
    vars.sap_instance_sid_service = host.vars.sap_instance_sid[config]
    check_command = "check_sap_dp_queues" 
    #
    # use escal groups of corresponding host
    # vars.escal_groups = host.vars.escal_groups
}
